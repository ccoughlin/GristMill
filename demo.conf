# Configuration for the GristMill demo application

# Configuration of the file ingestor pool
ingestor {
  number = 10  # Number of workers
  sink = {  # Configuration of where to send the ingested data
    # InetAddress.getLocalHost.getHostAddress is used if empty
    hostname = "192.168.1.10"
    port = 9999
    system = "MyriadGristMill"
    actor = "PyramidPool"
  }
}

# Configuration of the results aggregation pool
receiver {
  number = 10  # Number of workers
  source = {  # Configuration of where to receive ROI results
    # InetAddress.getLocalHost.getHostAddress is used if empty
    hostname = "192.168.1.10"
    port = 9999
    system = "MyriadGristMill"
    actor = "ROIFinderPool"
  }
}

# Configuration of reporting results
output {
  folder = ""  # Folder in which to save results (defaults to user's folder)
}

# Configure the underlying Akka network
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "WARNING"
  log-config-on-start = "off"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  actor {
    provider = "akka.remote.RemoteActorRefProvider"
    serialize-creators=off
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-received-messages = on
    log-sent-messages = on
    netty.tcp {
      # The hostname or ip clients should connect to.
      # InetAddress.getLocalHost.getHostAddress is used if empty
      hostname = ""
      port = 9997
      // Maximum allowable message size
      maximum-frame-size = 10240000b
    }
  }
}
