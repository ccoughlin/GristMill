# Configuration for the GristMill application

# Configure the Gaussian pyramid scale space stage, used to iteratively reduce the size of the original dataset
# to allow the Region Of Interest (ROI) finder to consider the data at multiple scales.
pyramid {
    number = 4 # Number of workers
    scalefactor = 2 # Scaling factor betweeen stages e.g. 2 --> reduce size by 1/2 for every iteration
    windowsize = 1 # Cutoff size e.g. 1 --> stop scaling when dataset is 1x1
}

# Configure the sliding window stage, used to scan across the dataset looking for ROI.
slider {
    number = 8 # Number of workers
    step = 15  # Points to skip when moving the window
    window {
        width = 15 # Width of window in points
        height = 15 # Height of window in points
    }
}

# Configure the Region Of Interest (ROI) finder stage, used to evaluate data to determine whether it contains an ROI
# or not.
roi {
    number = 16 # Number of workers
    # Path to an ROIBundle, consisting of a model trained to detect ROI and any preprocessing operation(s) it may
    # require.
    bundle = "C:\\Users\\Chris\\Desktop\\sobel_pa.myr"
}

# Configure the underlying Akka network
akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    # Log level used by the configured loggers (see "loggers") as soon
    # as they have been started; before that, see "stdout-loglevel"
    # Options: OFF, ERROR, WARNING, INFO, DEBUG
    loglevel = "WARNING"
    log-config-on-start = "off"
    logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
    actor {
        provider = "akka.remote.RemoteActorRefProvider"
        serialize-creators=off
    }
    remote {
        enabled-transports = ["akka.remote.netty.tcp"]
        log-received-messages = on
        log-sent-messages = on
        netty.tcp {
            # The hostname or ip clients should connect to.
            # InetAddress.getLocalHost.getHostAddress is used if empty
            hostname = ""
            port = 9999
            // Maximum allowable message size
            maximum-frame-size = 10240000b
        }
    }
}
